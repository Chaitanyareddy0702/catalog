name: Addon-test

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

env:
  # Common versions
  GO_VERSION: "1.22"

jobs:
  detect-noop:
    runs-on: ubuntu-latest
    outputs:
      noop: ${{ steps.noop.outputs.should_skip }}
    steps:
      - name: Detect No-op Changes
        id: noop
        uses: fkirc/skip-duplicate-actions@v5
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          paths_ignore: '["**.md", "**.mdx", "**.png", "**.jpg"]'
          do_not_skip: '["workflow_dispatch", "schedule", "push"]'
          concurrent_skipping: false

  Addon-test:
    name: Addon-test
    runs-on: ubuntu-latest
    needs: detect-noop
    if: needs.detect-noop.outputs.noop != 'true'

    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v4

      - name: Install tools
        run: |
          sudo apt-get update
          sudo apt-get install -y make gcc jq ca-certificates curl gnupg

          # Detect OS and ARCH
          OS=$(uname | tr '[:upper:]' '[:lower:]')
          ARCH=$(uname -m)

          if [[ "$ARCH" == "x86_64" ]]; then
            ARCH="amd64"
          elif [[ "$ARCH" == "aarch64" ]]; then
            ARCH="arm64"
          fi

          echo "Detected OS: $OS"
          echo "Detected ARCH: $ARCH"

          # Install kubectl dynamically
          KUBECTL_VERSION=$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)
          curl -LO "https://dl.k8s.io/release/${KUBECTL_VERSION}/bin/${OS}/${ARCH}/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/

          # Install Helm dynamically
          HELM_VERSION=$(curl -s https://api.github.com/repos/helm/helm/releases/latest | jq -r .tag_name)
          curl -LO "https://get.helm.sh/helm-${HELM_VERSION}-${OS}-${ARCH}.tar.gz"
          tar -zxvf helm-${HELM_VERSION}-${OS}-${ARCH}.tar.gz
          sudo mv ${OS}-${ARCH}/helm /usr/local/bin/helm
          rm -rf ${OS}-${ARCH} helm-${HELM_VERSION}-${OS}-${ARCH}.tar.gz

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Check addon semver
        run: |
          make check-addon-semver

      - name: Setup KinD
        run: |
          go install sigs.k8s.io/kind@v0.22.0
          kind delete cluster --name worker || true
          kind create cluster --name worker --image=kindest/node:v1.29.12
          kind export kubeconfig --internal --name worker --kubeconfig /tmp/worker.kubeconfig
          kind delete cluster || true
          kind create cluster --image=kindest/node:v1.29.12

      - name: Install vela cli
        run: |
          curl -fsSl https://kubevela.io/script/install.sh | bash -s v1.10.1

      - name: Install vela core
        run: |
          vela install -v v1.10.1 --yes
          kubectl get deploy -n vela-system kubevela-vela-core -oyaml

      - name: Vela worker cluster join
        run: |
          vela cluster join /tmp/worker.kubeconfig --name worker
          vela cluster list

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v45.0.7

      - name: List all changed files
        run: |
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            echo "$file was changed"
          done

      - name: Addon e2e-test
        run: |
          go build -o main test/e2e-test/addon-test/main.go
          ./main ${{ steps.changed-files.outputs.all_changed_files }}
